[
    {
        "method": "seed()",
        "description": "Initialize the random number generator"
    },
    {
        "method": "getstate()",
        "description": "Returns the current internal state of the random number generator"
    },
    {
        "method": "setstate()",
        "description": "Restores the internal state of the random number generator"
    },
    {
        "method": "getrandbits()",
        "description": "Returns a number representing the random bits"
    },
    {
        "method": "randrange()",
        "description": "Returns a random number between the given range"
    },
    {
        "method": "randint()",
        "description": "Returns a random number between the given range"
    },
    {
        "method": "choice()",
        "description": "Returns a random element from the given sequence"
    },
    {
        "method": "choices()",
        "description": "Returns a list with a random selection from the given sequence"
    },
    {
        "method": "shuffle()",
        "description": "Takes a sequence and returns the sequence in a random order"
    },
    {
        "method": "sample()",
        "description": "Returns a given sample of a sequence"
    },
    {
        "method": "random()",
        "description": "Returns a random float number between 0 and 1"
    },
    {
        "method": "uniform()",
        "description": "Returns a random float number between two given parameters"
    },
    {
        "method": "triangular()",
        "description": "Returns a random float number between two given parameters, you can also set a mode parameter to specify the midpoint between the two other parameters"
    },
    {
        "method": "betavariate()",
        "description": "Returns a random float number between 0 and 1 based on the Beta distribution (used in statistics)"
    },
    {
        "method": "expovariate()",
        "description": "Returns a random float number based on the Exponential distribution (used in statistics)"
    },
    {
        "method": "gammavariate()",
        "description": "Returns a random float number based on the Gamma distribution (used in statistics)"
    },
    {
        "method": "gauss()",
        "description": " Returns a random float number based on the Gaussian distribution (used in probability theories)"
    },
    {
        "method": "lognormvariate()",
        "description": "Returns a random float number based on a log-normal distribution (used in probability theories)"
    },
    {
        "method": "normalvariate()",
        "description": "Returns a random float number based on the normal distribution (used in probability theories)"
    },
    {
        "method": "vonmisesvariate()",
        "description": "Returns a random float number based on the von Mises distribution (used in directional statistics)"
    },
    {
        "method": "paretovariate()",
        "description": "Returns a random float number based on the Pareto distribution (used in probability theories)"
    },
    {
        "method": "weibullvariate()",
        "description": "Returns a random float number based on the Weibull distribution (used in statistics)"
    },
    {
        "method": "delete(url, args)",
        "description": "Sends a DELETE request to the specified url"
    },
    {
        "method": "get(url, params, args)",
        "description": "Sends a GET request to the specified url"
    },
    {
        "method": "head(url, args)",
        "description": "Sends a HEAD request to the specified url"
    },
    {
        "method": "patch(url, data, args)",
        "description": "Sends a PATCH request to the specified url"
    },
    {
        "method": "post(url, data, json, args)",
        "description": "Sends a POST request to the specified url"
    },
    {
        "method": "put(url, data, args)",
        "description": "Sends a PUT request to the specified url"
    },
    {
        "method": "request(method, url, args)",
        "description": "Sends a request of the specified method to the specified url"
    }   
]