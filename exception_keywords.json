[
    {
        "exception": "ArithmeticError",
        "description": "Raised when an error occurs in numeric calculations"
    },
    {
        "exception": "AssertionError",
        "description": "Raised when an assert statement fails"
    },
    {
        "exception": "AttributeError",
        "description": "Raised when attribute reference or assignment fails"
    },
    {
        "exception": "Exception",
        "description": "Raised when the input() method hits an 'end of file' condition (EOF)"
    },
    {
        "exception": "FloatingPointError",
        "description": "Raised when a floating point calculation fails"
    },
    {
        "exception": "GeneratorExit",
        "description": "Raised when a generator is closed (with the close() method)"
    },
    {
        "exception": "ImportError",
        "description": "Raised when an imported module does not exist"
    },
    {
        "exception": "IndentationError",
        "description": "Raised when indentation is not correct"
    },
    {
        "exception": "IndexError",
        "description": "Raised when an index of a sequence does not exist"
    },
    {
        "exception": "KeyError",
        "description": "Raised when a key does not exist in a dictionary"
    },
    {
        "exception": "KeyboardInterrupt",
        "description": "Raised when the user presses Ctrl+c, Ctrl+z or Delete"
    },
    {
        "exception": "LookupError",
        "description": "Raised when errors raised cant be found"
    },
    {
        "exception": "MemoryError",
        "description": "Raised when a program runs out of memory"
    },
    {
        "exception": "NameError",
        "description": "Raised when a variable does not exist"
    },
    {
        "exception": "NotImplementedError",
        "description": "Raised when an abstract method requires an inherited class to override the method"
    },
    {
        "exception": "OSError",
        "description": "Raised when a system related operation causes an error"
    },
    {
        "exception": "OverflowError",
        "description": "Raised when the result of a numeric calculation is too large"
    },
    {
        "exception": "ReferenceError",
        "description": "Raised when a weak reference object does not exist"
    },
    {
        "exception": "RuntimeError",
        "description": "Raised when an error occurs that do not belong to any specific exceptions"
    },
    {
        "exception": "StopIteration",
        "description": "Raised when the next() method of an iterator has no further values"
    },
    {
        "exception": "SyntaxError",
        "description": "Raised when a syntax error occurs"
    },
    {
        "exception": "TabError",
        "description": "Raised when indentation consists of tabs or spaces"
    },
    {
        "exception": "SystemError",
        "description": "Raised when a system error occurs"
    },
    {
        "exception": "SystemExit",
        "description": "Raised when the sys.exit() function is called"
    },
    {
        "exception": "TypeError",
        "description": "Raised when two different types are combined"
    },
    {
        "exception": "UnboundLocalError",
        "description": "Raised when a local variable is referenced before assignment"
    },
    {
        "exception": "UnicodeError",
        "description": "Raised when a unicode problem occurs"
    },
    {
        "exception": "UnicodeEncodeError",
        "description": "Raised when a unicode encoding problem occurs"
    },
    {
        "exception": "UnicodeDecodeError",
        "description": "Raised when a unicode decoding problem occurs"
    },
    {
        "exception": "UnicodeTranslateError",
        "description": "Raised when a unicode translation problem occurs"
    },
    {
        "exception": "ValueError",
        "description": "Raised when there is a wrong value in a specified data type"
    },
    {
        "exception": "ZeroDivisionError",
        "description": "Raised when the second operator in a division is zero"
    }
]